    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Ciclo principal
    ADDRESS-000
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-000
      LABEL-forever
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-000
      LABEL-
  FORMATTED-CALL read_switches
  LOGFORMAT-CALL read_switches[018]
INSTRUCTION-CALL
   OPERAND1-read_switches
  OP1 VALUE-018
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-001
      LABEL-
  FORMATTED-CALL hypot2
  LOGFORMAT-CALL hypot2[004]
INSTRUCTION-CALL
   OPERAND1-hypot2
  OP1 VALUE-004
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-002
      LABEL-
  FORMATTED-CALL write_leds
  LOGFORMAT-CALL write_leds[024]
INSTRUCTION-CALL
   OPERAND1-write_leds
  OP1 VALUE-024
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-003
      LABEL-
  FORMATTED-JUMP forever
  LOGFORMAT-JUMP forever[000]
INSTRUCTION-JUMP
   OPERAND1-forever
  OP1 VALUE-000
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Funcion: hypot2
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Entrada:
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s0 : a
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s1 : b
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Salida:
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s2 : a*a + b*b
    ADDRESS-004
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-004
      LABEL-hypot2
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-004
      LABEL-
  FORMATTED-XOR s2, s2
  LOGFORMAT-XOR s2, s2
INSTRUCTION-XOR
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-s2
  OP2 VALUE-s2
    COMMENT-
    ADDRESS-005
      LABEL-
  FORMATTED-LOAD s3, s0
  LOGFORMAT-LOAD s3, s0
INSTRUCTION-LOAD
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-s0
  OP2 VALUE-s0
    COMMENT-
    ADDRESS-006
      LABEL-
  FORMATTED-LOAD s4, s0
  LOGFORMAT-LOAD s4, s0
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-s0
  OP2 VALUE-s0
    COMMENT-
    ADDRESS-007
      LABEL-
  FORMATTED-CALL mult
  LOGFORMAT-CALL mult[00E]
INSTRUCTION-CALL
   OPERAND1-mult
  OP1 VALUE-00E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-008
      LABEL-
  FORMATTED-ADD s2, s5
  LOGFORMAT-ADD s2, s5
INSTRUCTION-ADD
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-009
      LABEL-
  FORMATTED-LOAD s3, s1
  LOGFORMAT-LOAD s3, s1
INSTRUCTION-LOAD
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-s1
  OP2 VALUE-s1
    COMMENT-
    ADDRESS-00A
      LABEL-
  FORMATTED-LOAD s4, s1
  LOGFORMAT-LOAD s4, s1
INSTRUCTION-LOAD
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-s1
  OP2 VALUE-s1
    COMMENT-
    ADDRESS-00B
      LABEL-
  FORMATTED-CALL mult
  LOGFORMAT-CALL mult[00E]
INSTRUCTION-CALL
   OPERAND1-mult
  OP1 VALUE-00E
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00C
      LABEL-
  FORMATTED-ADD s2, s5
  LOGFORMAT-ADD s2, s5
INSTRUCTION-ADD
   OPERAND1-s2
  OP1 VALUE-s2
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-00D
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Funcion: mult
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Entrada
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s3 : a, 4 bits
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s4 : b, 4 bits
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Salida:
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s5 : a*b, 8 bits
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;En C:
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; int mult(int a, int b){
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  int res = 0;
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  while(b != 0){
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;   if(b & 1){
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;    res += a;
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;   }
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;   a = a << 1;
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;   b = b >> 1;
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  }
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;  return res;
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; }
    ADDRESS-00E
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-00E
      LABEL-mult
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00E
      LABEL-
  FORMATTED-XOR s5, s5
  LOGFORMAT-XOR s5, s5
INSTRUCTION-XOR
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-s5
  OP2 VALUE-s5
    COMMENT-
    ADDRESS-00F
      LABEL-mult_loop
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-00F
      LABEL-
  FORMATTED-TEST s4, s4
  LOGFORMAT-TEST s4, s4
INSTRUCTION-TEST
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-s4
  OP2 VALUE-s4
    COMMENT-
    ADDRESS-010
      LABEL-
  FORMATTED-RETURN Z
  LOGFORMAT-RETURN Z
INSTRUCTION-RETURN
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-011
      LABEL-
  FORMATTED-TEST s4, 01
  LOGFORMAT-TEST s4, 01
INSTRUCTION-TEST
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-01
  OP2 VALUE-01
    COMMENT-
    ADDRESS-012
      LABEL-
  FORMATTED-JUMP Z, mult_update
  LOGFORMAT-JUMP Z, mult_update[014]
INSTRUCTION-JUMP
   OPERAND1-Z
  OP1 VALUE-Z
   OPERAND2-mult_update
  OP2 VALUE-014
    COMMENT-
    ADDRESS-013
      LABEL-
  FORMATTED-ADD s5, s3
  LOGFORMAT-ADD s5, s3
INSTRUCTION-ADD
   OPERAND1-s5
  OP1 VALUE-s5
   OPERAND2-s3
  OP2 VALUE-s3
    COMMENT-
    ADDRESS-014
      LABEL-mult_update
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-014
      LABEL-
  FORMATTED-SL0 s3
  LOGFORMAT-SL0 s3
INSTRUCTION-SL0
   OPERAND1-s3
  OP1 VALUE-s3
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-015
      LABEL-
  FORMATTED-SR0 s4
  LOGFORMAT-SR0 s4
INSTRUCTION-SR0
   OPERAND1-s4
  OP1 VALUE-s4
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-016
      LABEL-
  FORMATTED-JUMP mult_loop
  LOGFORMAT-JUMP mult_loop[00F]
INSTRUCTION-JUMP
   OPERAND1-mult_loop
  OP1 VALUE-00F
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-017
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Funcion: read_switches
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Entrada: Lee del puerto de entrada los dos numeros pasados.
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Salida:
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s0: Primer operando. 4 bits.
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s1: Segundo operando. 4 bits.
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Clobber:
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; En la lectura se sobrescribe el registro s7
    ADDRESS-018
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-018
      LABEL-
  FORMATTED-CONSTANT REG_HIGH, F0
  LOGFORMAT-CONSTANT REG_HIGH, F0
INSTRUCTION-CONSTANT
   OPERAND1-REG_HIGH
  OP1 VALUE-REG_HIGH
   OPERAND2-F0
  OP2 VALUE-F0
    COMMENT-
    ADDRESS-018
      LABEL-
  FORMATTED-CONSTANT REG_LOW, 0F
  LOGFORMAT-CONSTANT REG_LOW, 0F
INSTRUCTION-CONSTANT
   OPERAND1-REG_LOW
  OP1 VALUE-REG_LOW
   OPERAND2-0F
  OP2 VALUE-0F
    COMMENT-
    ADDRESS-018
      LABEL-
  FORMATTED-CONSTANT DUMMY_PORT, 00
  LOGFORMAT-CONSTANT DUMMY_PORT, 00
INSTRUCTION-CONSTANT
   OPERAND1-DUMMY_PORT
  OP1 VALUE-DUMMY_PORT
   OPERAND2-00
  OP2 VALUE-00
    COMMENT-
    ADDRESS-018
      LABEL-read_switches
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-018
      LABEL-
  FORMATTED-INPUT s7, DUMMY_PORT
  LOGFORMAT-INPUT s7, DUMMY_PORT[00]
INSTRUCTION-INPUT
   OPERAND1-s7
  OP1 VALUE-s7
   OPERAND2-DUMMY_PORT
  OP2 VALUE-00
    COMMENT-
    ADDRESS-019
      LABEL-
  FORMATTED-XOR s0, s0
  LOGFORMAT-XOR s0, s0
INSTRUCTION-XOR
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-s0
  OP2 VALUE-s0
    COMMENT-
    ADDRESS-01A
      LABEL-
  FORMATTED-XOR s1, s1
  LOGFORMAT-XOR s1, s1
INSTRUCTION-XOR
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-s1
  OP2 VALUE-s1
    COMMENT-
    ADDRESS-01B
      LABEL-
  FORMATTED-AND s0, s7
  LOGFORMAT-AND s0, s7
INSTRUCTION-AND
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-s7
  OP2 VALUE-s7
    COMMENT-
    ADDRESS-01C
      LABEL-
  FORMATTED-AND s0, REG_LOW
  LOGFORMAT-AND s0, REG_LOW[0F]
INSTRUCTION-AND
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-REG_LOW
  OP2 VALUE-0F
    COMMENT-
    ADDRESS-01D
      LABEL-
  FORMATTED-AND s1, s7
  LOGFORMAT-AND s1, s7
INSTRUCTION-AND
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-s7
  OP2 VALUE-s7
    COMMENT-
    ADDRESS-01E
      LABEL-
  FORMATTED-AND s1, REG_HIGH
  LOGFORMAT-AND s1, REG_HIGH[F0]
INSTRUCTION-AND
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-REG_HIGH
  OP2 VALUE-F0
    COMMENT-
    ADDRESS-01F
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Mover la parte superior a la baja
    ADDRESS-01F
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;No me quedo otra que shiftear 4 veces
    ADDRESS-01F
      LABEL-
  FORMATTED-SR0 s1
  LOGFORMAT-SR0 s1
INSTRUCTION-SR0
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-020
      LABEL-
  FORMATTED-SR0 s1
  LOGFORMAT-SR0 s1
INSTRUCTION-SR0
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-021
      LABEL-
  FORMATTED-SR0 s1
  LOGFORMAT-SR0 s1
INSTRUCTION-SR0
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-022
      LABEL-
  FORMATTED-SR0 s1
  LOGFORMAT-SR0 s1
INSTRUCTION-SR0
   OPERAND1-s1
  OP1 VALUE-s1
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-023
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-024
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-024
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Funcion: write_leds
    ADDRESS-024
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Entrada:
    ADDRESS-024
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-; s0: El resultado de la cuenta
    ADDRESS-024
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;Salida: Escribe al puerto de salida el resultado.
    ADDRESS-024
      LABEL-
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-;================================================================================
    ADDRESS-024
      LABEL-write_leds
  FORMATTED-
  LOGFORMAT-
INSTRUCTION-
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
    ADDRESS-024
      LABEL-
  FORMATTED-OUTPUT s0, DUMMY_PORT
  LOGFORMAT-OUTPUT s0, DUMMY_PORT[00]
INSTRUCTION-OUTPUT
   OPERAND1-s0
  OP1 VALUE-s0
   OPERAND2-DUMMY_PORT
  OP2 VALUE-00
    COMMENT-
    ADDRESS-025
      LABEL-
  FORMATTED-RETURN
  LOGFORMAT-RETURN
INSTRUCTION-RETURN
   OPERAND1-
  OP1 VALUE-
   OPERAND2-
  OP2 VALUE-
    COMMENT-
